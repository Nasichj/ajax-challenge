"use strict";
/*
    app.js, main Angular application script
    define your module and controllers here
*/
var tasksUrl = 'https://api.parse.com/1/classes/tasks';

angular.module('MyTestApp', ['ui.bootstrap'])
    .config(function($httpProvider) {
        //Parse required two extra headers sent with every HTTP request: X-Parse-Application-Id, X-Parse-REST-API-Key
        //the first needs to be set to your application's ID value
        //the second needs to be set to your application's REST API key
        //both of these are generated by Parse when you create your application via their web site
        //the following lines will add these as default headers so that they are sent with every
        //HTTP request we make in this application
        $httpProvider.defaults.headers.common['X-Parse-Application-Id'] = 'vGC7v3eMQf9JLoSFViq1BqTV5J3kWTYSFMFwi6xb';
        $httpProvider.defaults.headers.common['X-Parse-REST-API-Key'] = 'AwdMGD3qz08HeaADa01YeHejPpo3xmqtaUNm6kSJ';
    })
    .controller('CommsController', function($scope, $http) {
        $scope.refreshComms = function() {
            $scope.loading = true;
            $scope.specialmsg = "";
            $http.get(tasksUrl)
                .success(function(data) {
                    $scope.comms = data.results.sort(function(a,b) { return b.score - a.score; } );

                    $scope.specialmsg = "";

                    if ($scope.comms.length == 0){
                        $scope.specialmsg = "no comments yet. Be the first to review this!";
                    }



                })
                .error(function(err) {
                    $scope.errorMessage = err;

                }).finally(function() {
                    $scope.loading = false;
                });
        };
        $scope.refreshComms();

        $scope.newComm = {score: 0, rating: 1};

        $scope.addComm = function() {

            $http.post(tasksUrl, $scope.newComm)

                .success(function(responseData) {
                    $scope.newComm.objectId = responseData.objectId;
                    $scope.comms.push($scope.comms);
                    $scope.newComm = {score: 0, rating: 1};
                    $scope.refreshComms();
                });
        };

        $scope.incrementScores = function(comm, amount) {
            $scope.updating = true;
            $http.put(tasksUrl + '/' + comm.objectId, {
                score: {
                    __op: 'Increment',
                    amount: amount
                }
            })
                .success(function(responseData) {
                    console.log(responseData);
                    comm.score =responseData.score;
                })
                .error(function(err) {
                    console.log(err)
                })
                .finally(function() {
                    $scope.updating = false;
                });
        };//incrementVotes()

        $scope.deleteComm = function(objId) {
            $scope.updating = true;
            $http.delete(tasksUrl + '/' + objId)
                .success(function(responseData) {
                    console.log(responseData);
                    $scope.refreshComms();
                })
                .error(function(err) {
                    console.log(err)
                })
                .finally(function() {
                    $scope.updating = false;
                });


        }; // deleteComm()

    });
